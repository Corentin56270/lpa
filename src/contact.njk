---
layout: 'base.njk'
---

<main class="container contact-page">
	<section class="contact-intro">
		<h2>Contactez l'association</h2>
		<p>
			Une question sur nos activités, une envie de nous rejoindre, ou simplement un mot à nous adresser ?
			Remplissez le formulaire ci-dessous : nous revenons vers vous dès que possible.
		</p>
	</section>

	<section class="contact-content">
		<form id="contact-form" class="contact-form" novalidate>
			<div class="form-row">
				<label for="contact-name">Votre nom</label>
				<input id="contact-name" name="name" type="text" autocomplete="name" minlength="2" maxlength="120" required>
				<small class="field-error" data-error-for="name" aria-live="polite"></small>
			</div>

			<div class="form-row">
				<label for="contact-email">Votre e-mail</label>
				<input id="contact-email" name="email" type="email" autocomplete="email" maxlength="160" required>
				<small class="field-error" data-error-for="email" aria-live="polite"></small>
			</div>

			<div class="form-row">
				<label for="contact-message">Votre message</label>
				<textarea id="contact-message" name="message" rows="6" minlength="10" maxlength="4000" required></textarea>
				<small class="field-error" data-error-for="message" aria-live="polite"></small>
			</div>

			<div class="form-row form-row-hidden" aria-hidden="true">
				<label for="contact-website">Site web (laisser vide)</label>
				<input id="contact-website" name="honeypot" type="text" tabindex="-1" autocomplete="off">
			</div>

			<button type="submit" class="btn contact-submit">Envoyer</button>
			<p id="contact-feedback" class="form-feedback" role="status" aria-live="polite"></p>
		</form>

		<aside class="contact-details">
			<h3>Informations utiles</h3>
			<p>
				Pensez à vérifier votre dossier de courriers
				indésirables si vous n'avez pas de nouvelles rapidement.
			</p>
			<ul>
				<li>Association Lomener Port d'Attache</li>
				<li>Ploemeur, Morbihan</li>
			</ul>
		</aside>
	</section>
</main>

<script>
(() => {
	const form = document.getElementById('contact-form');
	if (!form) {
		return;
	}

	const endpoint = '/.netlify/functions/send-contact';
	const feedback = document.getElementById('contact-feedback');
	const errorElements = Array.from(document.querySelectorAll('.field-error'));

	const setFeedback = (message, variant = '') => {
		if (!feedback) {
			return;
		}
		feedback.textContent = message;
		feedback.classList.remove('success', 'error', 'loading');
		if (variant) {
			feedback.classList.add(variant);
		}
	};

	const clearErrors = () => {
		errorElements.forEach((el) => {
			el.textContent = '';
		});
	};

	const displayFieldErrors = (errors = {}) => {
		Object.entries(errors).forEach(([field, message]) => {
			const errorElement = document.querySelector(`[data-error-for="${field}"]`);
			if (errorElement) {
				errorElement.textContent = message;
			}
		});
	};

	form.addEventListener('submit', async (event) => {
		event.preventDefault();
		clearErrors();
		setFeedback('Envoi en cours…', 'loading');

		const formData = new FormData(form);
		const payload = {
			name: formData.get('name'),
			email: formData.get('email'),
			message: formData.get('message'),
			honeypot: formData.get('honeypot'),
		};

		try {
			const response = await fetch(endpoint, {
				method: 'POST',
				headers: {
					'Content-Type': 'application/json',
				},
				body: JSON.stringify(payload),
			});

			const body = await response.json().catch(() => ({}));

			if (!response.ok) {
				if (body.errors) {
					displayFieldErrors(body.errors);
				}
				const message = body.message || "Impossible d'envoyer votre message pour le moment.";
				setFeedback(message, 'error');
				return;
			}

			form.reset();
			setFeedback(body.message || 'Merci ! Votre message a bien été envoyé.', 'success');
		} catch (error) {
			console.error('Contact form submission failed', error);
			setFeedback("Une erreur inattendue est survenue. Merci de réessayer plus tard.", 'error');
		}
	});
})();
</script>